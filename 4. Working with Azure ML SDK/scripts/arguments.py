import argparse

def get_argparser():
    parser = argparse.ArgumentParser(description='PyTorch Lightning MNIST Example')
    parser.add_argument('--conv1-in-channels', type=int, default=1)
    parser.add_argument('--conv1-out-channels', type=int, default=32)
    parser.add_argument('--conv1-kernel-size', type=int, default=3)
    parser.add_argument('--conv1-stride', type=int, default=1)
    parser.add_argument('--conv2-in-channels', type=int, default=32)
    parser.add_argument('--conv2-out-channels', type=int, default=64)
    parser.add_argument('--conv2-kernel-size', type=int, default=3)
    parser.add_argument('--conv2-stride', type=int, default=1)
    parser.add_argument('--pool1-kernel-size', type=int, default=2)
    parser.add_argument('--dropout1-p', type=float, default=0.25)
    parser.add_argument('--dropout2-p', type=float, default=0.5)
    parser.add_argument('--fullconn1-in-features', type=int, default=12*12*64)
    parser.add_argument('--fullconn1-out-features', type=int, default=128)
    parser.add_argument('--fullconn2-in-features', type=int, default=128)
    parser.add_argument('--fullconn2-out-features', type=int, default=10)
    parser.add_argument('--adadelta-lr', type=float, default=1.0)
    parser.add_argument('--adadelta-rho', type=float, default=0.9)
    parser.add_argument('--adadelta-eps', type=float, default=1e-06)
    parser.add_argument('--adadelta-weight-decay', type=float, default=0)
    parser.add_argument('--dataset-root', type=str, default=os.getcwd())
    parser.add_argument('--dataset-download', action='store_true', default=True)
    parser.add_argument('--dataloader-mean', type=tuple, default=(0.1302,))
    parser.add_argument('--dataloader-std', type=tuple, default=(0.3069,))
    parser.add_argument('--dataloader-batch-size', type=int, default=32)
    parser.add_argument('--dataloader-num-workers', type=int, default=4)
    parser.add_argument('--progress-bar-refresh-rate', type=int, default=20)
    parser.add_argument('--max-epochs', type=int, default=1)
    return parser
